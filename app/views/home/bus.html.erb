<script>
Ext.onReady(function() {
Ext.getCmp('left').items.items[2].expand();	
var itemsPerPage=30
var recordstore = Ext.create('Ext.data.Store', {
    autoLoad: false,
    fields:['cityname','update_time','update_count','no_update_count','never_online_count','pass_48h_never_online_count','pass_24h_update_rate','pass_48h_update_rate','total_count'],
    pageSize: itemsPerPage,  
    proxy: {
        type: 'ajax',
        url: 'bus.json',   
        	reader: {
        		type: 'json',
        		root: 'gridData',
            	totalProperty: 'totalCount'
        	}
    	} ,
	groupField: 'cityname' 
	});
recordstore.load({
	params:{
    		start:0,
        	limit: itemsPerPage,
    }
});
 function search(type)
{
	if(type=="search"){
        	Ext.getCmp("clear").enable();
        	recordstore.load({
         	params:{
            	start:0,
            	limit: itemsPerPage,
             	keyname : Ext.getCmp("search_text").getValue(),
                        	}
        		});
	}else if(type=="clear"){
        Ext.getCmp("clear").disable();
        Ext.getCmp("search_text").setValue('');
        recordstore.load({
        		params:{
            	start:0,
             	limit: itemsPerPage,
                        }
       		 });
        }
}
var task = {
   run: function() {
		grid.view.loadMask.useMsg = false;
		recordstore.reload();
//		grid.view.loadMask.useMsg = true;
   },
   interval: 60000 //1 second
}

var runner = new Ext.util.TaskRunner();
runner.start(task);
var grid=Ext.create('Ext.grid.Panel', {
    title: '<%= t('city list') %>',
    store: recordstore,
	 features: [Ext.create('Ext.grid.feature.GroupingSummary', {
                        groupByText : '用本字段分组',
                        showGroupsText : '显示分组',
                        groupHeaderTpl: '{name}', //分组标题模版
                        startCollapsed: false, //设置初始分组是否收起

                    })],
    columns: [
	{ header: '<%= t('total_count') %>',  dataIndex: 'total_count' , flex: 1, align: 'center' },
	{ header: '<%= t('update_count') %>',  dataIndex: 'update_count' , flex: 1, align: 'center' },
	{ header: '<%= t('no_update_count') %>',  dataIndex: 'no_update_count' , flex: 1, align: 'center' },
	{ header: '<%= t('pass_48h_never_online_count') %>',  dataIndex: 'pass_48h_never_online_count' , flex: 1, align: 'center' },
	{ header: '<%= t('never_online_count') %>',  dataIndex: 'never_online_count' , flex: 1, align: 'center' },
	{ header: '<%= t('update_time') %>',  dataIndex: 'update_time' , flex: 1, align: 'center' },
//	{ header: '<%= t('pass_24h_update_rate') %>',  dataIndex: 'pass_24h_update_rate' , flex: 1, align: 'center' },
//	{ header: '<%= t('pass_48h_update_rate') %>',  dataIndex: 'pass_48h_update_rate' , flex: 1, align: 'center' }
	],
    width: 400,
    height: 125,
    selType: 'rowmodel',
    dockedItems: [{
        xtype: 'pagingtoolbar',
        store: recordstore,    
        dock: 'bottom',
        displayInfo: true, 
        items:[
			
    	]    
	}],
});
var tabpanel=Ext.create('Ext.tab.Panel', {
    width: 400,
    height: 400,
    items: [grid]
});
var work_space = Ext.getCmp('center');
work_space.removeAll();
work_space.add(tabpanel);
work_space.doLayout();
})
</script>
