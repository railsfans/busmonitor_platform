<script>
Ext.onReady(function() {
function hide_message() {
    Ext.defer(function() {
        Ext.MessageBox.hide();
    }, 2000);
}
Ext.apply(Ext.form.VTypes,{
    // function for validation
    ip: function(ipValue){
        // just a simple
        var ipRegex = /^(\d{1,3})(\.\d{1,3}){3}$/i;
        return ipRegex.test(ipValue);
    },
    // default error text
    ipText: "Not a valid IP, Correct Format is 12.23.2.1",
    // filter keys, can only type digit and dot
    ipMask: /[\d\.]/i
});

function action_handler(type) {
	var cityform =new Ext.create('Ext.form.Panel', {
		width: 300,
		frame: true,
  // 	title: '<%= t('cityname') %>',
     	bodyPadding: '10 10 0',
    	height: 500,
     	defaults: {
      	anchor: '100%',
       	msgTarget: 'side',
        	labelWidth: 60
        	},
   	items: [
		{xtype:"hidden",name: "id"},
        	{
            xtype: 'textfield',
            emptyText: '<%= t('please enter project id') %>',
            fieldLabel: '<%= t('project_id') %>',
            name: 'project_id',
				allowBlank: false,
				regex: /^(\d{10})$/,
				regexText: '<%= t('only ten number') %>'
		},
		{xtype:"textfield",fieldLabel: '<%= t('cityname') %>',name: "cityname",allowBlank: false},   
		{xtype:"textfield",fieldLabel: '<%= t('ip') %>',name: "ip", vtype: "ip", vtypeText:'<%= t('ip format error') %>'},
		{xtype:"textfield",fieldLabel: '<%= t('rootpasswd') %>',name: "rootpasswd"},
        	],
 		buttonAlign: 'center',
   	buttons: [
		{
			text: '<%= t('save') %>',
			handler: function(){
				var form = this.up('form').getForm();
					if(form.isValid()){
						switch (type) {
						case "add":  
							form.submit({
								url: 'add_cityinfo.json',
								waitMsg: '<%= t('waiting') %>',
								method: 'POST',
								success: function (form, action) {
									window.close();
									recordstore.reload();
									Ext.MessageBox.alert("<%= t('warn') %>","<%= t('add city success') %>");	 
									hide_message();	  
	                					},
								failure: function(response) {
									window.close();
									recordstore.reload();
									Ext.MessageBox.alert("<%= t('warn') %>","<%= t('city project_id repeat') %>");
									hide_message();	
								}  
	           					 });	  
							break;
						case "edit":
							form.submit({
								url: 'edit_cityinfo.json',
								waitMsg: '<%= t('waiting') %>',
								method: 'POST',
								success: function (form, action) {
									window.close();
									recordstore.reload();
									Ext.MessageBox.alert("<%= t('warn') %>","<%= t('edit city success') %>");	
									hide_message();	   
	                					},
								failure: function(response) {
									window.close();
									recordstore.reload();
									Ext.MessageBox.alert("<%= t('warn') %>","<%= t('city project_id repeat') %>");
									hide_message();			
								}  
	           					 });	  
							break;
					}
          			}
       			}
 		},{
            text: '<%= t('cancel') %>',
            handler: function() {
                window.close()
            			}
        	}]
	});

	var window = new Ext.Window({
		iconCls:"window",
		width:280,
		height:220,
		resizable:false,
		layout:"fit",
		closeAction:'close',
		plain: true,
		constrainHeader:true,
		modal:true,
		bodyStyle: 'padding:5px;',
		items:[cityform]
	});
	var rows = grid.getSelectionModel().getSelection();
	if (type == "add") {
		window.show();
		window.setTitle('<%= t('add cityinfo') %>');
    	}  
	else if(type == "edit"){
		if(rows.length==1){
				cityform.getForm().setValues({
					id:rows[0].get("id"),
					cityname: rows[0].get("name"),
					project_id:rows[0].get("project_id"),
					ip: rows[0].get("ip"),
					rootpasswd: rows[0].get("rootpasswd"),
				});
				window.show();
				window.setTitle('<%= t('edit cityinfo') %>');
		}
		else if(rows.length>1)
		{
			Ext.MessageBox.alert("<%= t('warn') %>","<%= t('you select more than one record') %>");
			hide_message();		
		}
		else {
			Ext.MessageBox.alert("<%= t('warn') %>","<%= t('please select one record') %>");	 
			hide_message();	
		}
	}
	else
	{
		if(rows.length!=0){
			var delete_id="";
			for(var i=0; i<rows.length; i++){
				delete_id+=rows[i].get("id");
				delete_id+=',';
			};
			Ext.MessageBox.confirm('<%= t('delete') %>', '<%= t('are you sure delete select citys') %>', function(btn){
				if(btn === 'yes'){
					Ext.Ajax.request({
						url: 'delete_cityinfo',
						params: { id : delete_id },
						success: function(response){
							var obj = Ext.decode(response.responseText);
							if (obj.success) {
								recordstore.reload();
							} else {
								Ext.MessageBox.alert("<%= t('warn') %>","<%= t('please select one record') %>");	
								hide_message();	
							}
						},
						failure: function(response) {
							Ext.MessageBox.alert("<%= t('warn') %>","<%= t('network error') %>");	
							hide_message();		 	
						}                
					});
				}
				else{
				}
			});
		}
		else
		{
		 	Ext.MessageBox.alert("<%= t('warn') %>","<%= t('please select one record') %>");
			hide_message();	
		}
	}
}
var itemsPerPage=30
var recordstore = Ext.create('Ext.data.Store', {
    autoLoad: false,
    fields:['ip','rootpasswd','name','project_id','id','online_state','online_time','offline_time'],
    pageSize: itemsPerPage,  
    proxy: {
        type: 'ajax',
        url: 'city.json',   
        	reader: {
        		type: 'json',
        		root: 'gridData',
            	totalProperty: 'totalCount'
        	}
    	}  
	});
recordstore.load({
	params:{
    		start:0,
        	limit: itemsPerPage,
    }
});

var task = {
   run: function() {
		grid.view.loadMask.useMsg = false;
		recordstore.reload();
//		grid.view.loadMask.useMsg = true;
   },
   interval: 60000 //1 second
}

var runner = new Ext.util.TaskRunner();
//runner.start(task);
//yard_monitor_timer = setInterval(function(){recordstore.reload()},5000);
 function search(type)
{
	if(type=="search"){
        	Ext.getCmp("clear").enable();
        	recordstore.load({
         	params:{
            	start:0,
            	limit: itemsPerPage,
             	keyname : Ext.getCmp("search_text").getValue(),
                        	}
        		});
	}else if(type=="clear"){
        Ext.getCmp("clear").disable();
        Ext.getCmp("search_text").setValue('');
        recordstore.load({
        		params:{
            	start:0,
             	limit: itemsPerPage,
                        }
       		 });
        }
}
function online_fomate(val){
    if (val) {
        return "<div>"+'<%= t('online') %>'+"</div>";
    }else{
        return "<div class='color-gray'>"+'<%= t('offline') %>'+"</div>";
    }
};
var grid=Ext.create('Ext.grid.Panel', {
    title: '<%= t('city list') %>',
    store: recordstore,
    columns: [
        {
            xtype: 'rownumberer',
            width: 60,
            sortable: false,
            header: '<%= t('index') %>', 
            align: 'center'
      	},
	{ header: 'id',  dataIndex: 'id' , flex: 1, align: 'center', hidden: true },
	{ header: '<%= t('project_id') %>',  dataIndex: 'project_id' , flex: 1, align: 'center' },
	{ header: '<%= t('cityname') %>',  dataIndex: 'name' , flex: 1, align: 'center' },
	{ header: '<%= t('online_state') %>',  dataIndex: 'online_state' , flex: 1, align: 'center', renderer:online_fomate },
	{ header: '<%= t('online_time') %>',  dataIndex: 'online_time' , flex: 1, align: 'center' },
	{ header: '<%= t('offline_time') %>',  dataIndex: 'offline_time' , flex: 1, align: 'center' },
	{ header: '<%= t('ip') %>',  dataIndex: 'ip' , flex: 1, align: 'center' },
	{ header: '<%= t('rootpasswd') %>',  dataIndex: 'rootpasswd' , flex: 1, align: 'center' }
	],
    width: 400,
    height: 125,
    selType: 'rowmodel',
	 multiSelect: true,
    dockedItems: [{
        xtype: 'pagingtoolbar',
        store: recordstore,    
        dock: 'bottom',
        displayInfo: true, 
        items:[
			{ text: '<%= t('add') %>',id:"add", iconCls:"add", handler:function(){action_handler("add")} },
			{ text: '<%= t('edit') %>',id:"edit", iconCls:"edit", handler:function(){action_handler("edit")} },
			{ text: '<%= t('delete') %>',id:"delete", iconCls:"delete", handler:function(){action_handler("delete")} },
    		 	{
         	xtype: 'textfield',
           	hideLabel: true,
          	width: 150,
          	id: "search_text",
         	 	},
       	{ text: '<%= t('search') %>',id:"search", iconCls:"search", handler:function(){search("search")} },
        	{ text: '<%= t('clear') %>', id:"clear", disabled:true, handler: function(){search("clear")} }
    	]    
	}],
});
var tabpanel=Ext.create('Ext.tab.Panel', {
    width: 400,
    height: 400,
    items: [grid]
});
var work_space = Ext.getCmp('center');
work_space.removeAll();
work_space.add(tabpanel);
work_space.doLayout();
})
</script>
